// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

/**
 * @title Token
 * @dev ERC20 Token for AIRealms ecosystem, with an initial supply minted to the deployer.
 */
contract Token is ERC20, Ownable {
    uint256 private constant INITIAL_SUPPLY = 1_000_000_000 * 10**18; // 1 Billion tokens with 18 decimals

    /**
     * @dev Constructor that gives msg.sender all of the existing tokens.
     */
    constructor() ERC20("AIRealms Token", "REALM") {
        _mint(msg.sender, INITIAL_SUPPLY);
    }

    /**
     * @dev Function to mint additional tokens. Only callable by the owner.
     * @param account The address to receive the newly minted tokens.
     * @param amount The amount of tokens to mint.
     */
    function mint(address account, uint256 amount) external onlyOwner {
        _mint(account, amount);
    }

    /**
     * @dev Function to burn tokens. Callable by anyone.
     * @param amount The amount of tokens to burn.
     */
    function burn(uint256 amount) external {
        _burn(msg.sender, amount);
    }
}
